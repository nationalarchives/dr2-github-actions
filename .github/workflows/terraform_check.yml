name: DR2 Run git secrets and tests
on:
  workflow_call:
    inputs:
      use-workspace:
        type: boolean
        required: false
        default: true
      working-directory:
        type: string
        required: false
        default: .
    secrets:
      WORKFLOW_TOKEN:
        required: true
      STATE_BUCKET:
        required: true
      DYNAMO_TABLE:
        required: true
      TERRAFORM_ROLE:
        required: true
jobs:
  terraform-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          submodules: recursive
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@351d894493fd3289754a5471c0892ba92fa0abe2
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
          aws-region: eu-west-2
          role-session-name: TerraformRole
      - uses: nationalarchives/dr2-github-actions/.github/actions/run-git-secrets@917201e254f112ff041b952dae76ef767cae7378
      - uses: nationalarchives/dr2-github-actions/.github/actions/slack-send@917201e254f112ff041b952dae76ef767cae7378
        if: failure()
        with:
          message: ":warning: Secrets found in repository: *${{ inputs.repo-name }}* @channel"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
      - uses: hashicorp/setup-terraform@2ee5124c445bec33d6e3b8e0b573d1ff87afcbcb
        with:
          terraform_version: 1.9.8
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check --recursive
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.STATE_BUCKET }}" --backend-config="dynamodb_table=${{ secrets.DYNAMO_TABLE }}"
      - name: Select integration workspace
        if: inputs.use-workspace
        run: terraform workspace select intg
      - name: Terraform Validate
        id: validate
        run: terraform validate
